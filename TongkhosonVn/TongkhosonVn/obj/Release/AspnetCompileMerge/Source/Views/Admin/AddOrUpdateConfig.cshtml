@model TongkhosonVn.Models.ConfigSite

@{
    ViewBag.Title = Model != null ? (Model.Id > 0 ? "Cập nhật cấu hình web" : "Thêm mới cấu hình web") : "Thêm mới cấu hình web";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2 id="title"></h2>
<p>
    <a href="@Url.Action("ListConfigSite","Admin")" class="btn btn-outline-info">
        Danh sách cấu hình website
    </a>
</p>
<div class="box_content">
    <form action="@Url.Action("AddOrUpdateConfig","Admin")" method="post" enctype="multipart/form-data">


        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model != null)
        {
            @Html.HiddenFor(model => model.Id)
        }

        <div class="form-group row">
            @Html.LabelFor(model => model.Title, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Description, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.HeaderCode, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HeaderCode)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.FooterCode, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FooterCode)
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Facebook, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Facebook)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Youtube, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Youtube)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Instagram, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Instagram)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Twitter, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Twitter)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.GoogleMaps, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoogleMaps)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Address, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Email, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.LogoTop, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div id="LoadImagesTop">
                    <input class="picture" type="file" name="pictureTop" onchange="loadFileLogoTop(event)" />
                </div>
                <div id="images-group">
                    <div class="row">
                        @if (Model != null)
                        {
                            if (Model.Id > 0)
                            {
                                <div class="multiple-images-wrapper col-md-2">
                                    <img src="~/Images/ConfigSites/@Model.LogoTop" class="multipleImage img-thumbnail" />
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.LogoBottom, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <div id="LoadImagesBot">
                    <input class="picture" type="file" name="pictureBottom" onchange="loadFileLogoBot(event)" />
                </div>
                <div id="images-group-bot">
                    <div class="row">
                        @if (Model != null)
                        {
                            if (Model.Id > 0)
                            {
                                <div class="multiple-images-wrapper col-md-2">
                                    <img src="~/Images/ConfigSites/@Model.LogoBottom" class="multipleImage img-thumbnail" />
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group row">
            @Html.LabelFor(model => model.Contact, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Payment, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Payment)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Helper, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Helper)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.PricePaint, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PricePaint)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Transport, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Transport)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.RefundPolicy, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RefundPolicy)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.CopyRight, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CopyRight)
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Active, new { @class = "col-form-label col-md-2" })
            <div class="col">
                @Html.EditorFor(model => model.Active)
            </div>
        </div>

        <div class="form-group row">
            <div class="col">
                <button type="submit" id="btnSubmit" class="btn"></button>
            </div>
        </div>
    </form>
</div>

 @section scripts{
    <script>
        if ($("#Id").val() > 0) {
            $("#title").html("Cập nhật config");
            $("#btnSubmit").html('<i class="far fa-pen-square mr-1"></i>Lưu thay đổi');
            $("#btnSubmit").addClass("btn-primary")
        }
        else {
            $("#title").html("Thêm mới config");
            $("#btnSubmit").html('<i class="far fa-plus mr-1"></i> Thêm mới');
            $("#btnSubmit").addClass("btn-success")
        }

        function loadFileLogoTop(event) {
            var files = event.target.files;
            var acceptFileTypes = /^image\/(gif|jpe?g|png)$/i;
            if (files[0]["type"].length && !acceptFileTypes.test(files[0]["type"])) {
                alert("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                $("#LoadImagesTop .picture").remove();
                $("#LoadImagesTop").append('<input type="file" class="picture" name="pictureTop" onchange="loadFileLogoTop(event)" />')
                return false;
            }
            if (files[0]["size"] > 4000000) {
                alert("Dung lượng ảnh lớn hơn 4MB");
                $("#LoadImagesTop .picture").remove();
                $("#LoadImagesTop").append('<input type="file" class="picture" name="pictureTop" onchange="loadFileLogoTop(event)" />')
                return false;
            }
            $("#images-group .row").html('<div class="multiple-images-wrapper col-md-2"><img src="' + URL.createObjectURL(event.target.files[0]) + '" class="img-thumbnail" /><a href="javascript:;" id="img-0" class="btn btn-outline-dark" onclick="deleteImage(0)"><span>x</span></a></div>');
        }
        function deleteImage(divid) {
            if (confirm('Bạn có chắc xóa ảnh này?')) {
                $('#img-' + divid).parent().fadeOut().remove();
                $("#LoadImagesTop .picture").remove();
                $("#LoadImagesTop").append('<input type="file" class="picture" name="picture" onchange="loadFileLogoTop(event)" />')
            }
        }
        function loadFileLogoBot(event) {
            var files = event.target.files;
            var acceptFileTypes = /^image\/(gif|jpe?g|png)$/i;
            if (files[0]["type"].length && !acceptFileTypes.test(files[0]["type"])) {
                alert("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                $("#LoadImagesBot .picture").remove();
                $("#LoadImagesBot").append('<input type="file" class="picture" name="pictureBottom" onchange="loadFileLogoBot(event)" />')
                return false;
            }
            if (files[0]["size"] > 4000000) {
                alert("Dung lượng ảnh lớn hơn 4MB");
                $("#LoadImagesBot .picture").remove();
                $("#LoadImagesBot").append('<input type="file" class="picture" name="pictureBottom" onchange="loadFileLogoBot(event)" />')
                return false;
            }
            $("#images-group-bot .row").html('<div class="multiple-images-wrapper col-md-2"><img src="' + URL.createObjectURL(event.target.files[0]) + '" class="img-thumbnail" /><a href="javascript:;" id="img-1" class="btn btn-outline-dark" onclick="deleteImageBot(1)"><span>x</span></a></div>');
        }

        function deleteImageBot(divid) {
            if (confirm('Bạn có chắc xóa ảnh này?')) {
                $('#img-' + divid).parent().fadeOut().remove();
                $("#LoadImagesBot .picture").remove();
                $("#LoadImagesBot").append('<input type="file" class="picture" name="picture" onchange="loadFileLogoBot(event)" />')
            }
        }
    </script>    
}